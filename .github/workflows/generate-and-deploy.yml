name: Generate and Deploy Blog Content

on:
  # Run on schedule (daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      post_count:
        description: 'Number of posts to generate per blog'
        required: false
        default: '1'
  
  # Run on push to main branch
  push:
    branches:
      - main
    paths:
      - 'config/**'
      - 'generators/**'

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v3
      
      - name: ÔøΩ Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: ÔøΩ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: üìö Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: ü§ñ Generate blog content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          node generators/openai-content-pipeline.js batch ${{ github.event.inputs.post_count || '1' }}
      
      - name: üìä Content statistics
        run: |
          echo "## üìà Content Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -d "output" ]; then
            echo "- **Blogs**: $(find output -maxdepth 1 -type d 2>/dev/null | tail -n +2 | wc -l)" >> $GITHUB_STEP_SUMMARY
            echo "- **Posts**: $(find output -name '*.html' 2>/dev/null | wc -l)" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Size**: $(du -sh output 2>/dev/null | cut -f1)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: No content generated yet" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date)" >> $GITHUB_STEP_SUMMARY
      
      - name: üöÄ Prepare deployment
        run: |
          chmod +x scripts/deploy-production.sh
          bash scripts/deploy-production.sh
          echo "üìÅ Deploy directory contents:"
          ls -la deploy/
          echo ""
          echo "üìÑ Files to deploy:"
          find deploy/ -type f | head -20
      
      - name: üì§ Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          publish_branch: gh-pages
          cname: ${{ secrets.CUSTOM_DOMAIN }}  # Optional: your custom domain
          force_orphan: true  # Clean gh-pages branch on each deploy
      
      - name: ‚úÖ Deployment complete
        run: |
          echo "## üéâ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your blog network is now live!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üåê **URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
      
      - name: üìß Notify on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Blog Generation Failed"
          body: "The automated blog generation workflow failed. Check the logs."
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: "Blog Network Bot"
